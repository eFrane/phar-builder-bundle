(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{365:function(t,a,s){"use strict";s.r(a);var e=s(24),n=function(t){t.options.__data__block__={mermaid_64a570e8:"sequenceDiagram\n  participant D as Dev\n  participant S as Application Console\n  participant P as Phar\n  participant G as GitHub\n\n  D->>S: php bin/console phar:build\n  S->>G: Check dependencies like box and the php-scoper\n  G->>S: Download external tools if necessary \n"}},r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"symfony-pharbuilder-bundle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symfony-pharbuilder-bundle"}},[t._v("#")]),t._v(" Symfony PharBuilder Bundle")]),t._v(" "),s("p",[t._v("The PharBuilder Bundle for "),s("a",{attrs:{href:"https://symfony.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symfony"),s("OutboundLink")],1),t._v(" can help you develop and maintain Phars\nbuilt with the Symfony Framework. It internally uses "),s("a",{attrs:{href:"https://github.com/box-project/box",target:"_blank",rel:"noopener noreferrer"}},[t._v("Box"),s("OutboundLink")],1),t._v(" to handle\nthe actual Phar stuff and is in effect not much more than a fancy Symfony integration for this\nwonderful tool.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Currently only CLI applications are supported. It is however planned to support both CLI and Web-facing\napplications once this bundle reaches v1.0.")])]),t._v(" "),s("h2",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),s("p",[t._v("First install the package with:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("composer")]),t._v(" require efrane/phar-builder-bundle\n")])])]),s("p",[t._v("Then activate it in your bundles configuration (typically "),s("code",[t._v("config/bundles.php")]),t._v("):")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name class-name-fully-qualified static-context"}},[t._v("EFrane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PharBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Bundle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PharBuilderBundle")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'all'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Required configuration")])]),t._v(" "),s("p",[t._v("The PharBuilder has several configuration options, most of which can be skipped for typical setups.\nTo get started, you only need to set a name for the generated phar and an output directory:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# config/packages/phar_builder.yaml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("phar_builder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output_path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%kernel.project_dir%'")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output_filename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your-phar-name'")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Add the concatenation of "),s("code",[t._v("output_path")]),t._v(" and "),s("code",[t._v("output_filename")]),t._v(" to your "),s("code",[t._v(".gitignore")]),t._v(".")])]),t._v(" "),s("p",[s("strong",[t._v("Build your Phar")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ php bin/console phar:build \n")])])]),s("h2",{attrs:{id:"adding-commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-commands"}},[t._v("#")]),t._v(" Adding Commands")]),t._v(" "),s("p",[t._v("The main idea behind this bundle is to enable developing a Phar that is separate from it's containing\nSymfony application. To that extent, no commands registered to the Symfony console ("),s("code",[t._v("bin/console")]),t._v(")\nare registered inside the Phar. Instead, you have to implement the\n"),s("code",[t._v("EFrane\\PharBuilder\\Command\\PharCommandInterface")]),t._v(" on commands that shall be accessible in the Phar.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("EFrane\\PharBuilder\\Command\\PharCommand")]),t._v(" is a Symfony Command base class implementing that interface\nto safe you some typing:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("EFrane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PharBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("PharCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Symfony"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("InputInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Symfony"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("OutputInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FooCommand")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PharCommand")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$defaultName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("InputInterface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("OutputInterface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("int")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$output")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeln")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("PharCommand")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SUCCESS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])])]),s("p",[t._v("Alternatively, if you need access to commands registered by Symfony itself or other Bundles, you\nneed to tag the command classes with the "),s("code",[t._v("phar.command")]),t._v(" tag.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("EFrane\\PharBuilder\\Command\\PharCommandInterface")]),t._v(" interface will "),s("strong",[t._v("never")]),t._v(" require the implementation\nof any methods. It is purely used for command discovery.")])]),t._v(" "),s("h2",{attrs:{id:"development-workflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#development-workflow"}},[t._v("#")]),t._v(" Development Workflow")]),t._v(" "),s("p",[t._v("Phars, unlike normal PHP Applications, need a more traditional development mindset as there always\nis a build step and a run step. This bundle aims to make the transition from the instant run workflow\nwe're used to as PHP Developers to this other style of working as smooth as possible. To that end\nthe commands "),s("code",[t._v("phar:build")]),t._v(" and "),s("code",[t._v("phar:watch")]),t._v(" are provided.")]),t._v(" "),s("h3",{attrs:{id:"developing-with-phar-build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#developing-with-phar-build"}},[t._v("#")]),t._v(" Developing with "),s("code",[t._v("phar:build")]),t._v(":")]),t._v(" "),s("p",[t._v("To build the Phar with the current configuration, simply run")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ php bin/console phar:build\n")])])]),s("p",[t._v("To save some time and unnecessary network requests, you can skip downloading\nthe dependencies after the first run by using")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ php bin/console phar:build --no-update-dependencies\n")])])]),s("h3",{attrs:{id:"developing-with-phar-watch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#developing-with-phar-watch"}},[t._v("#")]),t._v(" Developing with "),s("code",[t._v("phar:watch")]),t._v(":")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("The watch command is a recent addition and may not work well yet in all circumstances.")])]),t._v(" "),s("p",[t._v("As going through the motions of the above described manual development cycle can\nbecome quite tedious, a simpler alternative is offered:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ php bin/console phar:watch\n")])])]),s("p",[t._v("Will watch for changes in PHP and Yaml files and trigger a build if necessary.\nNote that, to save on resources, the change check is only done every ten seconds.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("You cannot start out with using "),s("code",[t._v("phar:watch")]),t._v(" on a newly setup system as it runs\nthe builds without updating the dependencies. Always run a normal "),s("code",[t._v("phar:build")]),t._v(" first.")])]),t._v(" "),s("h2",{attrs:{id:"behind-the-scenes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#behind-the-scenes"}},[t._v("#")]),t._v(" Behind the Scenes")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[s("em",[t._v("This section is far from finished.")])])]),t._v(" "),s("Mermaid",{attrs:{id:"mermaid_64a570e8",graph:t.$dataBlock.mermaid_64a570e8}})],1)}),[],!1,null,null,null);"function"==typeof n&&n(r);a.default=r.exports}}]);