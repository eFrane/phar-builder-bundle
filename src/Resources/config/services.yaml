services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in the bundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    EFrane\PharBuilder\:
        resource: '../../'

    EFrane\PharBuilder\Application\PharCommandLoader:
        lazy: true
        public: true # must be public as it cannot be injected into PharApplication before kernel boot
        arguments:
            $commands: !tagged_iterator phar.command

    EFrane\PharBuilder\Command\:
        resource: '../../Command/*'
        tags: ['phar.command']
        lazy: true

    EFrane\PharBuilder\Config\Config:
        public: true # must be public as it cannot be injected into PharKernel before kernel boot
        calls:
            - registerSections: [!tagged_iterator phar_builder.config.section]

    EFrane\PharBuilder\Config\Sections\:
        resource: '../../Config/Sections/'
        tags:
            - 'phar_builder.config.section'

    EFrane\PharBuilder\Development\Process\BoxProcessProvider:
        lazy: true

    EFrane\PharBuilder\Development\Process\IdentifiableProcessProvider: ~

    EFrane\PharBuilder\Development\Process\ProcessSelector:
        arguments:
            $providers: !tagged_iterator 'phar_builder.process_provider'
